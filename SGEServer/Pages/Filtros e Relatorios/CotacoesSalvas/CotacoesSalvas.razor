@page "/cotacoessalvas"


@inject NavigationManager Navigation
@inject AuthenticationLogin authStateProvider
@inject ProdutosController _Produtos
@inject CotacaoController _Cotacao
@layout MainLayout

<style>
    /* estiliza a cor do label do textfield antes de ser clicado */
    .mud-input-label {
        color: #ACACAB !important;
    }
    /* cor do houver do textfield  */
    .mud-input.mud-input-underline:after {
        border-bottom: 2px solid #04D282;
    }
    /* muda cor do label depois de algo ser digitado */
    .mud-shrink ~ label.mud-input-label.mud-input-label-inputcontrol, .mud-input:focus-within ~ label.mud-input-label.mud-input-label-inputcontrol {
        color: #fff !important;
    }
    /* cor do textfield depois de digitado */
    .mud-input > input.mud-input-root, div.mud-input-slot.mud-input-root {
        color: #fff;
    }

    .paper-style {
        background-color: #011E36;
        border-radius: 10px;
        padding: 10px 20px 40px 20px;
    }

    .sub-text {
        color: #fff;
        font-size: 20px;
        font-weight: 900;
    }
    h2 {
        text-align: center;
        font-size: @Variaveis.FontPadrao;
        font-weight: 700;
        margin: 20px 0 35px 20px;
        text-transform: uppercase;
        color:#fff;

    }

    .margin-padrao {
        margin: 0 10%;
        padding-bottom:30px;
    }

   
</style>

@if (isAuthenticated)
{
    <div class="margin-padrao">

        <h2>Cotações Salvas</h2
        <MudGrid Class="paper-style">
            <MudGrid Class="mb-5">
                <MudItem xs="12">
                    <MudText Class="sub-text">Filtros</MudText>
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="FiltroNumCotacao" Immediate="true" @onkeyup="OnFiltroChanged" Variant="Variant.Text" T="string" Label="N. Cotação" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="FiltroNomeFantasia" Immediate="true" @onkeyup="OnFiltroChanged" Variant="Variant.Text" T="string" Label="Nome Fantasia" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="FiltroCnpj" @onkeyup="OnFiltroChanged" Variant="Variant.Text" T="string" Label="Cnpj" />
                </MudItem>
                <MudItem xs="12" sm="6">
                    <MudTextField @bind-Value="FiltroData" @onkeyup="OnFiltroChanged" Variant="Variant.Text" T="string" Label="Data" />
                </MudItem>
            </MudGrid>
            <MudGrid Class=" d-flex flex-column">
                <MudItem>
                    <MudTable Items="listaFiltradaCotacoesSalvas" Striped="true" Bordered="true" FixedHeader="true" FixedFooter="true" Height="500px" Hover="true" Breakpoint="Breakpoint.None">
                        <ToolBarContent>
                            <MudText Style="font-weight: 700;">@listCotacoesSalvas.Count() Cotações Encontradas</MudText>
                        </ToolBarContent>
                        <ColGroup>
                            <col style="width: 180px;" />
                            <col style="width: 180px;" />
                            <col style="width: 180px;" />
                            <col style="width: 180px;" />
                            <col style="width: 180px;" />
                            <col style="width: 180px;" />
                            <col style="width: 180px;" />
                            <col style="width: 40px;" />
                        </ColGroup>
                        <HeaderContent>
                            <MudTh>N. Cotação</MudTh>
                            <MudTh>Nome Fantasia</MudTh>
                            <MudTh>Cnpj</MudTh>
                            <MudTh>Data Criação</MudTh>
                            <MudTh>Prazo Faturamento</MudTh>
                            <MudTh>Prazo de Entrega</MudTh>
                            <MudTh>Valor Total</MudTh>
                            <MudTh></MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="N. Cotação">@context.NumCotacao</MudTd>
                                <MudTd DataLabel="Nome Fantasia">@context.NomeFantasia</MudTd>
                                <MudTd DataLabel="Cnpj">@context.Cnpj</MudTd>
                                <MudTd DataLabel="Data Criação">@context.DataCriacao</MudTd>
                                <MudTd DataLabel="Prazo Faturamento">@context.FaturamentoRetornado</MudTd>
                                <MudTd DataLabel="Prazo de entrega">@context.PrazoEntregaRetornado</MudTd>
                                <MudTd DataLabel="Valor Total">@context.ValorTotal.ToString("F2")</MudTd>
                                <MudTd>
                                    <MudIconButton Size="@Size.Medium" Color="Color.Error" Icon="@Icons.Material.Filled.SimCardDownload" OnClick="@(() => BtnBaixar(context))" />
                                </MudTd>
                        </RowTemplate>
                        <PagerContent>
                            <MudTablePager style="overflow-y: scroll;" InfoFormat="@itensInfoFormat" RowsPerPageString="Itens por pág." />
                        </PagerContent>
                        <NoRecordsContent>
                            <MudText Color="Color.Error">Não foi encontrado nenhuma movimentação :\</MudText>
                        </NoRecordsContent>
                        <LoadingContent>
                            <MudText>Carregando...</MudText>
                        </LoadingContent>
                    </MudTable>
                </MudItem>
                    <MudGrid Class="d-flex justify-start">
                        <MudItem Class="d-flex justify-start" xs="6">
                            <MudButton Class="ml-4 mr-4" OnClick="BtnVoltar" Variant="Variant.Filled" Color="Color.Error">
                                Voltar
                            </MudButton>
                            <MudButton OnClick="BtnEditarCotao" Variant="Variant.Filled" Color="Color.Info">
                                Editar Cotacão
                            </MudButton>
                        </MudItem>

                    </MudGrid>
            </MudGrid>
        </MudGrid>

        </div>
}

@code {
    private bool isAuthenticated = false;
    private List<CotacaoModel> listCotacoesSalvas = new List<CotacaoModel>();
    private List<CotacaoModel> listaFiltradaCotacoesSalvas;
    private string itensInfoFormat = "{first_item}-{last_item} de {all_items}";
    private decimal valorTotal = 0;
    private string FiltroNumCotacao = string.Empty;
    private string FiltroNomeFantasia = string.Empty;
    private string FiltroCnpj = string.Empty;
    private string FiltroData = string.Empty;



    private LoginModel Usr = new();



    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await AuthenticationLogin.AuthenticateUser(authStateProvider, Usr, Navigation);

            listCotacoesSalvas = _Cotacao.CarregarCotacoes();
            listaFiltradaCotacoesSalvas = new List<CotacaoModel>(listCotacoesSalvas);

            StateHasChanged();
        }
    }

    private void OnFiltroChanged()
    {
        FiltrarCotacoes();
        StateHasChanged();
    }

    private void FiltrarCotacoes()
    {
        listaFiltradaCotacoesSalvas = listCotacoesSalvas.Where(c =>
            (string.IsNullOrEmpty(FiltroNumCotacao) || c.NumCotacao.ToLower().Contains(FiltroNumCotacao.ToLower())) &&
            (string.IsNullOrEmpty(FiltroNomeFantasia) || c.NomeFantasia.ToLower().Contains(FiltroNomeFantasia.ToLower())) &&
            (string.IsNullOrEmpty(FiltroCnpj) || c.Cnpj.ToLower().Contains(FiltroCnpj.ToLower())) &&
            (string.IsNullOrEmpty(FiltroData) || c.DataCriacao.ToString().ToLower().Contains(FiltroData.ToLower()))
        ).ToList();
    }

    private void BtnBaixar(CotacaoModel cotacao)
    {
        Navigation.NavigateTo($"/baixarcotacao/{cotacao.NumCotacao}/{Uri.EscapeDataString(cotacao.NomeFantasia)}/{Uri.EscapeDataString(cotacao.Cnpj)}/{cotacao.PrazoEntregaRetornado}/{cotacao.FaturamentoRetornado}/{cotacao.CodCotacao}");
    }



    private void BtnVoltar()
    {
        Navigation.NavigateTo("/index");
    }

    private void BtnEditarCotao()
    {
        Navigation.NavigateTo("/editarcotacao");
    }
}
